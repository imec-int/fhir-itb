<testcase id="post-Immunization-991000221105" xmlns="http://www.gitb.com/tdl/v1/"
          xmlns:gitb="http://www.gitb.com/core/v1/"
>
    <metadata>
        <gitb:name>Immunization SANDBOX - TS-VACC-W-01</gitb:name>
        <gitb:version>1.0</gitb:version>
        <gitb:description>Immunization without stocklocation</gitb:description>
        <!-- See here how we refer to a HTML block that will be added as documentation for the test case. -->
        <!--        <gitb:documentation import="docs/client/test-case-1.html"/>-->
    </metadata>
    <actors>
        <!--
            The Actor IDs need to match those in the test suite and in the test engine. One of these needs to always be the SUT (System Under Test).
        -->
        <gitb:actor id="client" role="SUT"/>
        <gitb:actor id="server"/>
    </actors>
    <variables>
        <!--
            The ProxyHandler will forward the request to the test cases.
        -->
        <var name="request" type="map"/>
    </variables>
    <!--
        Setting "stopOnError" to true will stop the test session as soon as an error is encountered. By default, test sessions will continue regardless of errors.
    -->
    <steps stopOnError="false">

        <log>'Started session '||$SESSION{sessionId}||' for test case
            '||$SESSION{testCaseId}||''
        </log>
        <!-- Log the received request parameters -->
        <log>"### Proxy Request Data ###"</log>
        <log>$request</log>
        <log>
            "Request URI: " || $request{uri}
        </log>
        <log>
            "Request Method: " || $request{method}
        </log>
        <log>
            "Request Headers: " || $request{headers}
        </log>
        <log>
            "Request Body: " || $request{body}
        </log>

        <!-- Vaccine code | 20250526 obsolete, because directly calling the testcase -->
<!--        <assign to="choleraImmunizationCode">"991000221105"</assign>-->
<!--        <verify handler="StringValidator" desc="Verify Cholera vaccine code">-->
<!--            <input name="actualstring">$immunizationCode</input>-->
<!--            <input name="expectedstring">$choleraImmunizationCode</input>-->
<!--        </verify>-->

        <!-- Administration route -->
        <process handler="JsonPathProcessor" operation="process" output="administrationRoute">
            <input name="content">$request{body}</input>
            <input name="expression">"$.route.coding[*].code"</input>
        </process>

        <verify handler="StringValidator" desc="Verify administration route">
            <input name="actualstring">$administrationRoute</input>
            <input name="expectedstring">"IM"</input>
        </verify>

        <!-- Extract value as before (no change here) - START -->
        <!-- Administered product -->
        <process handler="JsonPathProcessor" operation="process" output="administeredProductCode">
            <input name="content">$request{body}</input>
            <input name="expression">"$.extension[?(@.url=='https://www.ehealth.fgov.be/standards/fhir/vaccination/StructureDefinition/be-ext-administeredProduct')].extension[?(@.url=='coded')].valueCodeableConcept.coding[*].code"</input>
        </process>
        <verify handler="StringValidator" desc="Verify administered product">
            <input name="actualstring">$administeredProductCode</input>
            <input name="expectedstring">"2285575"</input>
        </verify>

        <!-- Recorder presence -->
        <!-- Verify direct mention-->
        <process handler="JsonPathProcessor" operation="process" output="recorderDirect">
            <input name="content">$request{body}</input>
            <input name="expression">"$.extension[?(@.url=='https://www.ehealth.fgov.be/standards/fhir/core/StructureDefinition/be-ext-recorder')].valueReference.identifier[?(@.system=='https://www.ehealth.fgov.be/standards/fhir/core/NamingSystem/ssin')].value "</input>
        </process>
        <assign to="recorder">if ($recorderDirect) then $recorderDirect else "null"</assign>
        <!-- Verify reference mention -->
        <process handler="JsonPathProcessor" operation="process" output="recorderReference">
            <input name="content">$request{body}</input>
            <input name="expression">"$.extension[?(@.url=='https://www.ehealth.fgov.be/standards/fhir/core/StructureDefinition/be-ext-recorder')].valueReference.reference"</input>
        </process>
        <assign to="recorder">if ($recorderReference) then $recorderReference else "null"</assign>
        <!-- Assign values according to found value -->
        <assign to="reportResult">if ($recorder != "") then "SUCCESS" else "FAILURE"</assign>
        <!-- Prepare the report that you want to display (we add here the JSON content and the code value you are expecting) -->
        <assign to="report{recorder}">$recorder</assign>
        <!-- Use the DisplayProcessor to show the report. -->
        <process desc="Verify recorder presence" hidden="false" handler="DisplayProcessor">
            <!-- The DisplayProcessor supports a "result" input to determine whether its a success, failure or undefined -->
            <input name="result">$reportResult</input>
            <input name="parameters">$report</input>
        </process>

        <!-- Presence of patient identifier -->
        <process handler="JsonPathProcessor" operation="process" output="patient">
            <input name="content">$request{body}</input>
            <input name="expression">"$.patient.identifier.value"</input>
        </process>
        <process output="partialPseudo" handler="RegExpProcessor" operation="collect">
            <input name="input">$patient</input>
            <!-- Flags are passed in embedded format (e.g. case insensitive match). -->
            <input name="expression">'^.{0,20}'</input>
        </process>
        <log>$partialPseudo</log>
        <verify handler="ExpressionValidator" desc="Verify patient pseudonym presence">
            <input name="expression">$patient != ""</input>
            <input name="successMessage">'The pseudonym is present.' </input>
            <input name="failureMessage">'The pseudonym is not present.'</input>
        </verify>

        <!-- Note -->
        <process handler="JsonPathProcessor" operation="process" output="note">
            <input name="content">$request{body}</input>
            <input name="expression">"$.note[*].text"</input>
        </process>

        <verify handler="StringValidator" desc="Verify note">
            <input name="actualstring">$note</input>
            <input name="expectedstring">"TS-VACC-W-01"</input>
        </verify>

        <!-- Location -->
        <process handler="JsonPathProcessor" operation="process" output="location">
            <input name="content">$request{body}</input>
            <input name="expression">"$.contained[?(@.resourceType=='Location')].address.country"</input>
        </process>

        <verify handler="StringValidator" desc="Verify location">
            <input name="actualstring">$location</input>
            <input name="expectedstring">"BE"</input>
        </verify>

        <!-- Status -->
        <process handler="JsonPathProcessor" operation="process" output="status">
            <input name="content">$request{body}</input>
            <input name="expression">"$.status"</input>
        </process>

        <verify handler="StringValidator" desc="Verify status">
            <input name="actualstring">$status</input>
            <input name="expectedstring">"completed"</input>
        </verify>

        <!-- Dose quantity-->
        <process handler="JsonPathProcessor" operation="process" output="doseQuantity">
            <input name="content">$request{body}</input>
            <input name="expression">"$.doseQuantity.value"</input>
        </process>

        <verify handler="StringValidator" desc="Verify dose quantity">
            <input name="actualstring">"" || $doseQuantity</input>
            <input name="expectedstring">"1"</input>
        </verify>

        <!-- Body site -->
        <process handler="JsonPathProcessor" operation="process" output="bodySite">
            <input name="content">$request{body}</input>
            <input name="expression">"$.site.coding.[*].code"</input>
        </process>

        <verify handler="StringValidator" desc="Verify body site">
            <input name="actualstring">$bodySite</input>
            <input name="expectedstring">"371309009"</input>
        </verify>

        <!-- Body laterality -->
        <process handler="JsonPathProcessor" operation="process" output="bodyLaterality">
            <input name="content">$request{body}</input>
            <input name="expression">"$.site.extension.[*].valueCoding.code"</input>
        </process>

        <verify handler="StringValidator" desc="Verify body laterality">
            <input name="actualstring">$bodyLaterality</input>
            <input name="expectedstring">"51440002"</input>
        </verify>

        <!-- Reason code-->
        <process handler="JsonPathProcessor" operation="process" output="reasonCode">
            <input name="content">$request{body}</input>
            <input name="expression">"$.reasonCode.[*].coding.[*].code"</input>
        </process>

        <verify handler="StringValidator" desc="Verify reason code">
            <input name="actualstring">$reasonCode</input>
            <input name="expectedstring">"1137457009"</input>
        </verify>

        <!-- OccurrenceDateTime timestamp-->
        <process handler="JsonPathProcessor" operation="process" output="occurenceTimestamp">
            <input name="content">$request{body}</input>
            <input name="expression">"$.occurrenceDateTime</input>
        </process>

        <verify handler="RegExpValidator" desc="Verify occurrenceDateTime timestamp">
            <input name="input">$occurenceTimestamp</input>
            <input name="expression">"20[0-9]{2}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9]\+[0-9]{2}:[0-9]{2}"</input>
        </verify>

        <!-- Recorded timestamp-->
        <process handler="JsonPathProcessor" operation="process" output="recordedTimestamp">
            <input name="content">$request{body}</input>
            <input name="expression">"$.recorder</input>
        </process>

        <verify handler="RegExpValidator" desc="Verify recorded timestamp">
            <input name="input">$recordedTimestamp</input>
            <input name="expression">"20[0-9]{2}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9]\+[0-9]{2}:[0-9]{2}"</input>
        </verify>

        <!-- Use handler="$DOMAIN{proxyHandler}" to trigger the Proxied request and get the response. -->
        <send id="proxyRequest" handler="$DOMAIN{proxyHandler}" from="client" to="server" hidden="true"/>
        <log>"### Proxy Response Data ###"</log>
        <log>$proxyRequest{response}</log>
        <!-- <log>$DOMAIN{riziv_id}</log> -->
        <log>
            "Proxy Response status: " || $proxyRequest{response}{status}
        </log>
        <log>
            "Proxy Response headers: " || $proxyRequest{response}{headers}
        </log>
        <log>
            "Proxy Response body: " || $proxyRequest{response}{body}
        </log>

        <!-- Validate Status Code -->
        <assign to="responseCodeList" append="true">'201 CREATED'</assign>
        <assign to="responseCodeList" append="true">'200 OK'</assign>
        
        <process handler="CollectionUtils" operation="contains" output="responseCode">
            <input name="list">$responseCodeList</input>
            <input name="value">$proxyRequest{response}{status}</input>
        </process>

        <assign to="responseCodeResult">if ($responseCode) then "SUCCESS" else "FAILURE"</assign>
        
        <assign to="report{jsonContent}">$responseCodeList</assign>
        <assign to="report{expectedCode}">$proxyRequest{response}{status}</assign>

        <process desc="Verify response status code" hidden="false" handler="DisplayProcessor">
            <!-- The DisplayProcessor supports a "result" input to determine whether its a success, failure or undefined -->
            <input name="result">$responseCodeResult</input>
            <input name="parameters">$report</input>
        </process>

        <!--<verify handler="StringValidator" desc="Verify response status code">
            <input name="actualstring">$proxyRequest{response}{status}</input>
            <input name="expectedstring">"201 CREATED"</input>
        </verify>-->

        <process handler="JSONPointerProcessor" output="resourceType">
            <input name="content">$proxyRequest{response}{body}</input>
            <input name="pointer">"/resourceType"</input>
        </process>

        <!-- Use the HttpMessagingV2 handler to send ordinary HTTP requests.
        <send id="httpSend" from="client" to="server" handler="HttpMessagingV2">
            <input name="uri">
                "https://echo.free.beeceptor.com/"
            </input>
            <input name="method">"GET"</input>
        </send>
        <log>"### HttpMessagingV2 ###"</log>
        <log>$httpSend{response}</log> -->


    </steps>
    <!-- The output section allows us to define specialised summary error (or success) messages to make the result more user-friendly. -->
    <output>
        <success>
            <default>"Test case passed successfully."</default>
        </success>
        <failure>
            <default>"Test case failed."</default>
        </failure>
        <undefined>
            <default>"Call not picked up for testing"</default>
        </undefined>
    </output>
</testcase>
